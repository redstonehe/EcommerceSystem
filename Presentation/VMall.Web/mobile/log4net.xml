<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!--<section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <log4net>
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender ">
      <!--定义文件存放位置-->
      <file value="logs/" />
      <!--是否追加到文件-->
      <appendToFile value="true" />
      <!--名称是否可以更改 为false为可以更改-->
      <param name="StaticLogFileName" value="false"/>
      <!--变换的形式为日期-->
      <rollingStyle value="Date" />
      <param name="StaticLogFileName" value="false"/>
      <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
      <!--日期的格式-->
      <DatePattern value="yyyy-MM/yyyy-MM-dd.'txt'" />
      <param name="RollingStyle" value="Date"/>
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 出错类：%logger property:[%property{NDC}] - 错误描述：%message%newline" />-->
        <conversionPattern value="记录时间：%date 日志级别：%level Log类：%logger - Log描述：\n %message%newline" />
      </layout>
    </appender>

    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为C盘的log4net.mdb-->
    <appender name="AdoNetAppender_SqlServer" type="log4net.Appender.AdoNetAppender,log4net">
      <!--<bufferSize value="10" />-->
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="Data Source=.;Initial Catalog=ZHWLMall;Integrated Security=false;persist security info=True;User ID=sa;Password=;Pooling=true;Max Pool Size = 512" />
      <commandText value="INSERT INTO LogDetails ([LogDate],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@logDate, @thread, @logLevel, @logger,@message,@exception)" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@logDate" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logLevel" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="240" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%exception" />
        </layout>
      </parameter>
    </appender>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <level value="ALL" />
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppender" />
      <!--控制台控制显示日志
      <appender-ref ref="ConsoleAppender" />-->
      <!--Windows事件日志
      <appender-ref ref="EventLogAppender" />-->
      <!-- 如果不启用相应的日志记录，可以通过这种方式注释掉
      <appender-ref ref="AdoNetAppender_Access" />
      -->
    </root>
    <!-- Setup the perfAppender category, add the appenders and set the default level 因为root与logger是父与子的关系，所以不应将：perfAppender在root中显示，避免重复 -->
    <logger name="Performance" additivity="false">
      <level value="ALL" />
      <appender-ref ref="EventLogAppender" />
    </logger>
    
  </log4net>
</configuration>

